name: Docker Image CI

on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  DOCKER_CONTAINER_REGISTRY: registry.hub.docker.com
  DOCKER_REPO_NAME: bateau84
  DOCKER_IMAGE_NAME: openttd

jobs:
  # Get list of versions
  get_versions:
    runs-on: ubuntu-latest
    steps:
      - name: get versions
        id: get_versions
        run: |
          echo "::set-output name=versions::$(curl -s -H 'Accept: application/vnd.github.v3+json' https://api.github.com/repos/OpenTTD/OpenTTD/releases | jq -r '[.[:10]|.[]|.tag_name]|@csv')"
      - name: Output version string
        run: echo ${{ steps.get_versions.outputs.versions }}
    outputs:
      versions: ${{ steps.get_versions.outputs.versions }}

  # Build openttd images
  build:
    runs-on: ubuntu-latest
    needs: get_versions
    strategy:
      matrix:
        version: ${{ fromJson(needs.get_versions.outputs.versions) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker registry authentication
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_CONTAINER_REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - name: Set up Qemu
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Output platforms
        run: |
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.DOCKER_CONTAINER_REGISTRY }}/${{ env.DOCKER_REPO_NAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ matrix.version }}
      - name: Output image digest for debugging purposes
        run: echo ${{ steps.docker_build.outputs.digest }}
